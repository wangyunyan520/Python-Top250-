from bs4 import BeautifulSoup         #网页解析，获取数据
import re                             #正则表达式，进行文字匹配
import urllib.request,urllib.error    #制定URL，获取网页数据
import xlwt                           #进行excel操作
import sqlite3                         #进行sqlite




def main():
    baseurl="https://movie.douban.com/top250?start="
    # #1.爬取网页
    datalist=getData(baseurl)
    savepath="豆瓣电影Top250.xls" #存储路径
    # #2.解析数据
    # #3.保存数据
    saveData(datalist,savepath)
    # askURL("https://movie.douban.com/top250?start=0")


#影片详情链接的规则
findlink = re.compile(r'<a href="(.*?)">')    #创建正则表达式对象，表示规则（字符串的模式）
#影片图片
findImgSrc = re.compile(r'<img.*src="(.*?)"',re.S)#图片链接 re.S 让换行符包含在字符中
#影片片名
findTitle = re.compile(r'<span class="title">(.*)</span>')
#影片评分
findRating = re.compile(r'<span class="rating_num" property="v:average">(.*)</span>')
#评价人数
findJudgenum = re.compile(r'<span>(\d*)人评价</span>')
#概况
findInq = re.compile(r'<span class="inq">(.*)</span>')
#找到影片相关内容
findBd = re.compile(r'<p class="">(.*？)</p>',re.S)


#爬取网页
def getData(baseurl):
    datalist=[]
    #1 循环爬取所有网页内容并保存
    for i in range(0,10):#对所有页面进行爬取获取数据
        url = baseurl + str(i*25)#网址递加
        html = str(askURL(url))#保存获取到的网页内容
        
    #2 逐一解析数据
    soup = BeautifulSoup(html,"html.parser")
    for item in soup.find_all('div',class_="item"):#class_表示class的属性值是item
        # print(item)#测试：查看电影item的全部信息
        data = []   #保存一部电影的所有信息
        item = str(item)
# 添加链接
        link= re.findall(findlink,item)[0]#re库用来通过正则表达式查找指定的字符串
        data.append(link)
# 添加图片
        ImgSrc = re.findall(findImgSrc,item)[0]
        data.append(ImgSrc)

        titles = re.findall(findTitle,item)
        if (len(titles)==2):
            ctitle = titles[0]
            data.append(ctitle)
            otitle = titles[1].replace("/","")#去掉无关的符号
            data.append(otitle)
        else:
            data.append(titles)
            data.append(' ')#外国名字留空

        rating = re.findall(findRating,item)[0]
        data.append(rating)

        judgenum = re.findall(findJudgenum,item)[0]
        data.append(judgenum)

        inq = re.findall(findInq,item)[0]
        if len(inq) !=0:
            inq = inq[0].replace("。","")
            data.append(inq)
        else:
            data.append(" ")

        bd = re.findall(findBd,item)[0]
        bd=re.sub('<br(\s+)?/>(\s+)?'," ",bd)#去掉<br/>
        bd=re.sub('/'," ",bd)   #替换/
        data.append(bd.strip())#去掉前后的空格

        datalist.append(data)#把处理好的一部的电影的信息放在datalist内
        # print(datalist)
    return datalist

#得到一个指定URL的网页内容
def askURL(url):
    head = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
    }
    request = urllib.request.Request(url,headers=head)
    html = ""
    try:
        response = urllib.request.urlopen(request)
        html = response.read().decode("utf-8")
        # print(html)
    except urllib.error.URLError as e:
        if hasattr(e,"code"):
            print(e.code)
        if hasattr(e,"reason"):
            print(e.reason)

#保存数据
def saveData(datalist,savepath):
    print("save.....")
    workbook = xlwt.Workbook(encoding="utf-8",style_compression=0)  # 创建workbook对象
    worksheet = workbook.add_sheet('豆瓣电影250',cell_overwrite_ok=True)  # 创建工作表
    col = ("电影详情链接","图片链接","影片中文名","影片外国名","评分","评价数","概况","相关信息")
    for i in range(0, 8):
        worksheet.write(0, i, col[i]) #列名
    for i in range(0,250):
        print("第%d条"%i)
        data = datalist[i]
        for k in range(0,8):
            worksheet.write(i+1,k,data[k])
    # worksheet.write(0,0,'hello') #写入数据 第一行参数“行”第二行参数‘列’第三个数据参数内容
    workbook.save(savepath)


if __name__=="__main__":#当程序执行时，程序入口，执行点
    #调用函数
    main()
    print("爬取完毕！")
